[{"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\index.js":"1","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\reportWebVitals.js":"2","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\App.js":"3","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\NavBar\\NavBar.js":"4","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\ProductCarousel\\ProductCarousel.js":"5","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\FoodCard\\FoodCard.js":"6","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\Home\\Home.js":"7","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\FoodRow\\FoodRow.js":"8","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\SimpleRating\\SimpleRating.js":"9","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\ProductDetail\\ProductDetail.js":"10","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\FoodCart\\FoodCart.js":"11","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\Login\\Login.js":"12","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\Login\\ErrorMessage.js":"13","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\Register\\Register.js":"14","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\ProductCart\\ProductCart.js":"15","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\ProductCard\\ProductCard.js":"16","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\ShowFood\\ShowFood.js":"17","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\InputType\\InputType.js":"18","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\InputFood\\InputFood.js":"19","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\config\\firebase.js":"20","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\auth\\Auth.js":"21","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\PrivateRoutes\\PrivateRoutes.js":"22","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\config\\roles.js":"23","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\Profile\\Profile.js":"24","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\PageNotFound\\PageNotFound.js":"25"},{"size":585,"mtime":1608537582455,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":472,"mtime":1608543137951,"results":"29","hashOfConfig":"27"},{"size":5079,"mtime":1608624775386,"results":"30","hashOfConfig":"27"},{"size":1475,"mtime":1607660604281,"results":"31","hashOfConfig":"27"},{"size":4118,"mtime":1608607578753,"results":"32","hashOfConfig":"27"},{"size":845,"mtime":1608703811347,"results":"33","hashOfConfig":"27"},{"size":1395,"mtime":1607676169682,"results":"34","hashOfConfig":"27"},{"size":1233,"mtime":1607670429208,"results":"35","hashOfConfig":"27"},{"size":10364,"mtime":1608634250977,"results":"36","hashOfConfig":"27"},{"size":11794,"mtime":1607768660093,"results":"37","hashOfConfig":"27"},{"size":3964,"mtime":1608698527052,"results":"38","hashOfConfig":"27"},{"size":557,"mtime":1607855764020,"results":"39","hashOfConfig":"27"},{"size":3844,"mtime":1608698682387,"results":"40","hashOfConfig":"27"},{"size":7926,"mtime":1608108841760,"results":"41","hashOfConfig":"27"},{"size":3179,"mtime":1608017350829,"results":"42","hashOfConfig":"27"},{"size":1512,"mtime":1608454748891,"results":"43","hashOfConfig":"27"},{"size":2953,"mtime":1608178386615,"results":"44","hashOfConfig":"27"},{"size":5617,"mtime":1608466649579,"results":"45","hashOfConfig":"27"},{"size":816,"mtime":1608433337407,"results":"46","hashOfConfig":"27"},{"size":1311,"mtime":1608559768214,"results":"47","hashOfConfig":"27"},{"size":679,"mtime":1608707871244,"results":"48","hashOfConfig":"27"},{"size":1293,"mtime":1608702143955,"results":"49","hashOfConfig":"27"},{"size":5257,"mtime":1608705010594,"results":"50","hashOfConfig":"27"},{"size":154,"mtime":1608539124322,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"9jx66",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"54"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\index.js",[],["118","119"],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\reportWebVitals.js",[],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\App.js",[],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\NavBar\\NavBar.js",["120"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport { ButtonGroup } from '@material-ui/core';\r\nimport { AuthContext } from \"../../auth/Auth\";\r\nimport { firestore, auth } from '../../config/firebase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    topMenu: {\r\n        background: '#fe4b11'\r\n    },\r\n    bottomMenu: {\r\n        background: '#f5f5f5'\r\n    }\r\n}));\r\n\r\nexport default function NavBar() {\r\n    const { currentUser, setCurrentUser } = useContext(AuthContext);\r\n    const [menus, setMenu] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const classes = useStyles();\r\n    const open = Boolean(anchorEl);\r\n\r\n    const ref = firestore.collection('menu');\r\n    const history = useHistory();\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(null);\r\n        history.push('/profile')\r\n    };\r\n\r\n    const handleLogin = (event) => {\r\n        // setAnchorEl(event.currentTarget);\r\n        setAnchorEl(null);\r\n        history.push('/login');\r\n    };\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const logOut = () => {\r\n        auth.signOut();\r\n        setAnchorEl(null);\r\n        setCurrentUser(null);\r\n        alert('Log out...')\r\n    };\r\n\r\n    //ONE TIME GET FUNCTION\r\n    const getMenu = () => {\r\n        setLoading(true);\r\n        ref\r\n            .get()\r\n            .then((item) => {\r\n                const items = item.docs.map((doc) => doc.data());\r\n                setMenu(items);\r\n                setLoading(false);\r\n            });\r\n    }\r\n    useEffect(() => {\r\n        getMenu();\r\n        setLoading(false);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={classes.topMenu}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Panumas-Os\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleMenu}\r\n                        color=\"inherit\"\r\n                    >\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorEl}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        keepMounted\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={handleProfileMenuOpen}>Profile</MenuItem>\r\n                        {currentUser ?\r\n                            <MenuItem onClick={logOut}>Logout</MenuItem>\r\n                            :\r\n                            <MenuItem onClick={handleLogin}>Login</MenuItem>\r\n                        }\r\n\r\n                    </Menu>\r\n                </Toolbar>\r\n                <Toolbar className={classes.bottomMenu}>\r\n                    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n                        <Button id='0'>Home</Button>\r\n                        {menus.map((menu, idx) => <Button id={menu.id}>{menu.name}</Button>)}\r\n                    </ButtonGroup>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\ProductCarousel\\ProductCarousel.js",[],["121","122"],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\FoodCard\\FoodCard.js",["123","124","125"],"import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AuthContext } from \"../../auth/Auth\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, CardMedia, Grid } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport { firestore, auth } from '../../config/firebase';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    txtPrice: {\r\n        padding: 0,\r\n        fontStyle: 'italic'\r\n    },\r\n    txtName: {\r\n        color: \"green\",\r\n        padding: 0\r\n    },\r\n    btnBuy: {\r\n        width: '100%',\r\n        background: '#f3683e',\r\n        color: \"#ffffff\",\r\n        fontSize: 'large'\r\n    }\r\n}));\r\n\r\n\r\nexport default function FoodCard({ food: { price, name, fileUrl, foodId } }) {\r\n\r\n    const classes = useStyles();\r\n    // const [expanded, setExpanded] = React.useState(false);\r\n    const {setSelectFood } = useContext(AuthContext);\r\n    // const [loading, setLoading] = useState(false);\r\n    const ref = firestore.collection('menu');\r\n\r\n    const history = useHistory();\r\n\r\n    const foodDetail = () => {\r\n        setSelectFood(foodId);\r\n        history.push(\"productdetail\");\r\n    }\r\n\r\n     //ONE TIME GET FUNCTION\r\n    //  const getFood = () => {\r\n    //     setLoading(true);\r\n    //     ref\r\n    //         .get()\r\n    //         .then((item) => {\r\n    //             const items = item.docs.map((doc) => doc.data());\r\n    //             setMenu(items);\r\n    //             setLoading(false);\r\n    //         });\r\n    // }\r\n    // useEffect(() => {\r\n    //     getMenu();\r\n    //     setLoading(false);\r\n    //     // eslint-disable-next-line\r\n    // }, []);\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6} md={3} >\r\n            <Card id={foodId} className={classes.card}>\r\n                <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image={fileUrl}\r\n                    title=\"Image title\"\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                    {/* <Grid container justify='space-between'>\r\n                        <Grid item >\r\n                            <Typography variant=\"p\" color=\"textSecondary\">\r\n                                ขายแล้ว: 103\r\n                    </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Rating\r\n                                size=\"small\"\r\n                                name=\"simple-controlled\"\r\n                                value={rating}\r\n                          \r\n                            />\r\n                        </Grid>\r\n                    </Grid> */}\r\n                    <Grid item >\r\n                        <Typography className={classes.txtName} variant=\"h5\">\r\n                            {name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Typography className={classes.txtPrice} variant=\"h5\">\r\n                            {price} บาท\r\n                            </Typography>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button \r\n                    id={foodId} \r\n                    className={classes.btnBuy} \r\n                    variant=\"contained\"\r\n                    onClick={foodDetail}\r\n                    >\r\n                        สั่งซื้อ\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n",["126","127"],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\Home\\Home.js",["128"],"import React, { useContext } from 'react';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\nimport ShowFood from '../../../components/ShowFood/ShowFood';\r\nimport { AuthContext } from \"../../../auth/Auth\";\r\n// import Navbar from '../../../components/NavBar/NavBar';\r\nconst useStyles = makeStyles(() => ({\r\n    mainBody: {\r\n        margin: \"0 auto\",\r\n        marginTop: 10,\r\n        textAlign: 'center',\r\n        background: '#f5f5f5'\r\n    }\r\n}));\r\n\r\nfunction Home() {\r\n    const classes = useStyles();\r\n    const { currentUser } = useContext(AuthContext);\r\n    // console.log(currentUser.email);\r\n    return (\r\n        <div className={classes.mainBody}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n                เมนู\r\n      </Typography>\r\n            <ShowFood />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\FoodRow\\FoodRow.js",[],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\SimpleRating\\SimpleRating.js",[],["129","130"],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\ProductDetail\\ProductDetail.js",["131"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { AuthContext } from \"../../../auth/Auth\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n// import Rating from '@material-ui/lab/Rating';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { firestore } from '../../../config/firebase';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    Radio,\r\n    RadioGroup,\r\n    TextField,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        paddingTop: 2,\r\n        width: '60%',\r\n        margin: '0 auto'\r\n    },\r\n    textReview: {\r\n        paddingLeft: 2\r\n    },\r\n    textFoodName: {\r\n        color: '#fe4b11'\r\n    },\r\n    txtInput: {\r\n        width: 60,\r\n        height: '20px',\r\n        margin: 5,\r\n        outline: 'none',\r\n        // border:'none',\r\n        textAlign: 'center'\r\n\r\n    }\r\n\r\n}));\r\n\r\n\r\nexport default function ProductDetail() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(true);\r\n    const { currentUser, selectFood } = useContext(AuthContext);\r\n    const [qty, setQty] = useState(1)\r\n    const [foodSize, setFoodSize] = useState('1');\r\n    const [spicy, setSpicy] = useState('2');\r\n    const [food, setFood] = useState([]);\r\n    const [option,setOption] = useState('');\r\n    const [egg, setEgg] = useState('');\r\n    \r\n    const history = useHistory();\r\n   \r\n    const handleQty = (event) =>{\r\n        setQty(event.target.value);\r\n    }\r\n    const handleOption = (event) =>{\r\n        setOption(event.target.value);\r\n    }\r\n    const handleEgg = (event) =>{\r\n        setEgg(event.target.value);\r\n    }\r\n    const handleSize = (event) => {\r\n        setFoodSize(event.target.value);\r\n    };\r\n    const handleSpicy = (event) => {\r\n        setSpicy(event.target.value);\r\n        console.log(event.target.value);\r\n    };\r\n\r\n    const handleOrder = () => {\r\n        try {\r\n            const OrderRef = firestore.collection('foodOrder');\r\n            const orderId = uuidv4();\r\n\r\n            OrderRef\r\n                .doc(orderId)\r\n                .set({\r\n                    orderId,\r\n                    name,\r\n                    totalPrice:qty*price,\r\n                    foodSize,\r\n                    foodId,\r\n                    spicy,\r\n                    qty,\r\n                    fileUrl,\r\n                    // totalSale: totalSale + qty,\r\n                    option,\r\n                    egg,\r\n                    status:'อยู่ระหว่างดำเนินการ',\r\n                    email:currentUser.email\r\n                })\r\n            alert('Create successed')\r\n            history.push('/');\r\n        } catch (error) {\r\n            console.log(\"ERR ===\", error);\r\n            alert(\"Image uploading failed!\");\r\n        }\r\n    }\r\n\r\n    //ONE TIME GET FUNCTION\r\n    const getFoodById = () => {\r\n        const foodRef = firestore.collection('food');\r\n        setLoading(true);\r\n        foodRef\r\n            .where('foodId', '==', selectFood)\r\n            .get()\r\n            .then((item) => {\r\n                const items = item.docs.map((doc) => doc.data());\r\n                setFood(items);\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFoodById();\r\n    }, [])\r\n \r\n    if (loading) {\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"80vh\",\r\n                }}\r\n            >\r\n                <h1>Loading ...</h1>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const { fileUrl, price, name, totalSale,foodId } = food[0];\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Card>\r\n                <Grid container alignItems='center' spacing={2} style={{ padding: 5 }}>\r\n                    <Grid item xs={6}>\r\n                        <img\r\n                            src={fileUrl}\r\n                            width='100%'\r\n                            alt='food'\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6} >\r\n                        <Typography className={classes.textFoodName} variant=\"h4\" gutterBottom>\r\n                            {name}\r\n                        </Typography>\r\n                        <Grid container alignItems='center'>\r\n                            <Grid item xs={5}>\r\n                                <Typography variant=\"h4\" gutterBottom>\r\n                                    {price} บาท\r\n                            </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={7}>\r\n                                <Grid item >\r\n                                    {/* <Rating\r\n                                        size=\"small\"\r\n                                        name=\"simple-controlled\"\r\n                                        value={4}\r\n                                      onChange={(event, newValue) => {\r\n                                        setValue(newValue);\r\n                                      }}\r\n                                    /> */}\r\n                                    <Typography className={classes.textReview} variant=\"p\" color=\"textSecondary\">\r\n                                        ขายแล้ว {totalSale} ชิ้น\r\n                                </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider />\r\n                        <FormControl component=\"fieldset\">\r\n                            <FormLabel component=\"legend\">\r\n                                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                                    ขนาด\r\n                                </Typography>\r\n                            </FormLabel>\r\n                            <RadioGroup \r\n                            row name=\"size\" \r\n                            value={foodSize} \r\n                            onChange={handleSize}\r\n                            >\r\n                                <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label=\"ธรรมดา\" />\r\n                                <FormControlLabel value=\"2\" control={<Radio color=\"primary\" />} label=\"พิเศษ\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                        <Divider />\r\n                        <FormControl >\r\n                            <FormLabel >\r\n                                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                                    ไข่\r\n                                </Typography>\r\n                            </FormLabel>\r\n                            <RadioGroup row name=\"egg\" onChange={handleEgg}>\r\n                                <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label=\"ไข่ดาว\" />\r\n                                <FormControlLabel value=\"2\" control={<Radio color=\"primary\" />} label=\"ไข่เจียว\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                        <Divider />\r\n                        <FormControl>\r\n                            <FormLabel>\r\n                                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                                    ความเผ็ด\r\n                                </Typography>\r\n                            </FormLabel>\r\n                            <RadioGroup row name=\"spicy\" value={spicy} onChange={handleSpicy}>\r\n                                <FormControlLabel value={'1'} control={<Radio color=\"secondary\" />} label=\"1\" labelPlacement=\"top\" />\r\n                                <FormControlLabel value={'2'} control={<Radio color=\"secondary\" />} label=\"2\" labelPlacement=\"top\" />\r\n                                <FormControlLabel value={'3'} control={<Radio color=\"secondary\" />} label=\"3\" labelPlacement=\"top\" />\r\n                                <FormControlLabel value={'4'} control={<Radio color=\"secondary\" />} label=\"4\" labelPlacement=\"top\" />\r\n                                <FormControlLabel value={'5'} control={<Radio color=\"secondary\" />} label=\"5\" labelPlacement=\"top\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                        <Divider />\r\n                        <FormControl>\r\n                            <FormLabel>\r\n                                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                                    เพิ่มเติม\r\n                                </Typography>\r\n                            </FormLabel>\r\n                        </FormControl>\r\n                        <TextField\r\n                            id=\"outlined-multiline-static\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={2}\r\n                            variant=\"outlined\"\r\n                            onChange={handleOption}\r\n                        />\r\n                        <Divider />\r\n                        <Grid container style={{ paddingTop: 5 }}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" color=\"textSecondary\">\r\n                                    จำนวน\r\n                                </Typography>\r\n                                <input\r\n                                    className={classes.txtInput}\r\n                                    type=\"number\"\r\n                                    value={qty}\r\n                                    onChange={handleQty}\r\n                                />\r\n                                <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={handleOrder}>\r\n                                    สั่งอาหาร\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\FoodCart\\FoodCart.js",[],["132","133"],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\Login\\Login.js",["134"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { auth } from '../../../config/firebase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        alert('Login success...')\r\n        resetInput();\r\n        history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\nconst gotoSignUp = () => {\r\n    \r\n    history.push('/register');\r\n  }\r\n\r\n  const resetInput = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const handleUsername = event => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handlePassword = event => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          เข้าสู่ระบบ\r\n        </Typography>\r\n        <form onSubmit={login} className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={handleUsername}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={handlePassword}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container justify='center'>\r\n            {/* <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid> */}\r\n            <Grid item>\r\n              <Button \r\n              color=\"primary\"\r\n              onClick={gotoSignUp}\r\n              >\r\n                Sign Up\r\n            </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n    </Container>\r\n  );\r\n}","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\Login\\ErrorMessage.js",[],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\Register\\Register.js",[],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\ProductCart\\ProductCart.js",["135","136"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Button, Container, Grid, IconButton, TextField, Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n    },\r\n    cover: {\r\n        width: 151,\r\n    },\r\n});\r\n\r\nlet id = 0;\r\nfunction createData(fname, ftype, fspicy, fegg, fcomment, fprice, qty, totalprice, action) {\r\n    id += 1;\r\n    return { id, fname, ftype, fspicy, fegg, fcomment, fprice, qty, totalprice, action };\r\n}\r\n\r\nconst rows = [\r\n    createData('ต้มยำกุ้ง', 'พิเศษ', 4.0, 'ไข่ดาว', 'ขอข้าวเยอะๆ', 59),\r\n    createData('ผัดผักบุ้ง', 'ธรรมดา', 1.0, 'ไข่เจียว', '', 29),\r\n    createData('ยำรวมมิตร', 'พิเศษ', 3.0, 'ไข่ดาว', 'ไม่ใส่หอม', 69),\r\n\r\n];\r\nconst handleDelete = (id) => {\r\n    console.log(id);\r\n}\r\n\r\nfunction ProductCart(props) {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                รายการอาหาร\r\n      </Typography>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow >\r\n                        <TableCell style={{ fontWeight: 'bold', fontSize: '18px' }}>รายการสินค้า</TableCell>\r\n                        <TableCell style={{ fontWeight: 'bold', fontSize: '18px' }}></TableCell>\r\n                        <TableCell style={{ fontWeight: 'bold', fontSize: '18px' }} align=\"center\">จำนวน</TableCell>\r\n                        <TableCell style={{ fontWeight: 'bold', fontSize: '18px' }} align=\"right\">ราคา</TableCell>\r\n                        <TableCell style={{ fontWeight: 'bold', fontSize: '18px' }} align=\"right\">รวม</TableCell>\r\n                        <TableCell style={{ fontWeight: 'bold', fontSize: '18px' }} align=\"center\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map(row => (\r\n                        <TableRow key={row.id} >\r\n                            <TableCell component=\"th\" scope=\"row\" align='center'>\r\n                                <img\r\n                                    width='100px'\r\n                                    height='100px'\r\n                                    src=\"https://source.unsplash.com/random\"\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell align=\"left\" style={{ padding: 0 }}>\r\n                                <Typography variant=\"h5\" component=\"h1\" color=\"inherit\" gutterBottom>\r\n                                    {row.fname}\r\n                                </Typography>\r\n                                <div>\r\n                                    <Typography variant=\"p\" color=\"textSecondary\" style={{ fontSize: \"18px\" }} gutterBottom>\r\n                                        ขนาด:\r\n                                        </Typography>\r\n                                    <Typography variant=\"p\" color=\"textSecondary\" style={{ fontSize: \"18px\", paddingLeft: \"5px\" }} gutterBottom>\r\n                                        {row.ftype}\r\n                                    </Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography variant=\"p\" color=\"textSecondary\" style={{ fontSize: \"18px\" }} gutterBottom>\r\n                                        ความเผ็ด:\r\n                                        </Typography>\r\n                                    <Typography variant=\"p\" color=\"textSecondary\" style={{ fontSize: \"18px\", paddingLeft: \"5px\" }} gutterBottom>\r\n                                        {row.fspicy}\r\n                                    </Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography variant=\"p\" color=\"textSecondary\" style={{ fontSize: \"18px\" }} gutterBottom>\r\n                                        ไข่:\r\n                                        </Typography>\r\n                                    <Typography variant=\"p\" color=\"textSecondary\" style={{ fontSize: \"18px\" }} gutterBottom>\r\n                                        {row.fegg}\r\n                                    </Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography variant=\"p\" color=\"textSecondary\" style={{ fontSize: \"18px\" }} gutterBottom>\r\n                                        เพิ่มเติม:\r\n                                        </Typography>\r\n                                    <Typography variant=\"p\" color=\"textSecondary\" style={{ fontSize: \"18px\" }} gutterBottom>\r\n                                        {row.fcomment}\r\n                                    </Typography>\r\n                                </div>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <TextField\r\n                                    id=\"outlined-number\"\r\n                                    type=\"number\"\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={1}\r\n                                />\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.fprice}</TableCell>\r\n                            <TableCell align=\"right\">59</TableCell>\r\n                            <TableCell align=\"center\">\r\n                                <IconButton onClick={() => handleDelete(row.id)} color=\"secondary\" aria-label=\"delete\">\r\n                                    <DeleteIcon />\r\n                                </IconButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table >\r\n            <Divider />\r\n            <Grid container spacing={3} justify='flex-end' style={{ marginTop: '5px' }}>\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        รวม\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <TextField\r\n                        id=\"outlined-number\"\r\n                        type=\"number\"\r\n                        variant=\"outlined\"\r\n                        defaultValue={1}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        บาท\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.margin}>\r\n                        ยืนยันการสั่งซื้อ\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nProductCart.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ProductCart);","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\ProductCard\\ProductCard.js",[],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\components\\ShowFood\\ShowFood.js",["137"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Grid, makeStyles } from '@material-ui/core';\r\nimport FoodCard from '../FoodCard/FoodCard';\r\n\r\nimport { firestore } from '../../config/firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n}));\r\n\r\n/* connect firebase  */\r\n\r\nexport default function ShowFood() {\r\n  const classes = useStyles();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [allFood, setAllFood] = useState([]);\r\n\r\n  //ONE TIME GET FUNCTION\r\n  const getAllFood = () => {\r\n    const foodRef = firestore.collection('food');\r\n    setLoading(true);\r\n    foodRef\r\n    .get()\r\n    .then((item) => {\r\n      const items = item.docs.map((doc) => doc.data());\r\n      setAllFood(items);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n   getAllFood();\r\n  }, [])\r\n\r\n  //REALTIME GET FUNCTION\r\n  // const  getAllData = () => {\r\n  //     setLoading(true);\r\n  //     foodRef.onSnapshot((querySnapshot) => {\r\n  //       const items = [];\r\n  //       querySnapshot.forEach((doc) => {\r\n  //         items.push(doc.data());\r\n  //       });\r\n  //       setData(items);\r\n  //       setLoading(false);\r\n  //     });\r\n  //   }\r\n\r\n    return (\r\n      <Container className={classes.cardGrid} maxWidth=\"md\">\r\n        <Grid container spacing={2}>\r\n          {allFood.map((food, idx) => <FoodCard key={idx} food={food} />)}\r\n        </Grid>\r\n      </Container>\r\n    )\r\n  }\r\n","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\InputType\\InputType.js",["138","139","140","141","142","143","144"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function InputType() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    เพิ่มประเภทอาหาร\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"type\"\r\n                                label=\"ประเภท\"\r\n                                name=\"type\"\r\n                            // autoComplete=\"type\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        เพิ่มข้อมูล\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}",["145","146"],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\InputFood\\InputFood.js",["147","148"],"import React, { useEffect, useState } from 'react';\r\nimport { firestore, storage } from '../../../config/firebase';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { DropzoneDialog } from 'material-ui-dropzone';\r\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function InputFood() {\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [type, setType] = useState('');\r\n  const [fileUrl, setFileUrl] = useState(null);\r\n  const [selectedFiles, setSelectedFiles] = useState({ open: false, files: [] });\r\n\r\n  const [allType, setAllType] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleName = (event) => {\r\n    setName(event.target.value);\r\n  }\r\n  const handlePrice = (event) => {\r\n    setPrice(event.target.value);\r\n  }\r\n\r\n  const handleType = (event) => {\r\n    setType(event.target.value);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setSelectedFiles({ open: false });\r\n  }\r\n\r\n  const handleSave = (files) => {\r\n    //Saving files to state for further use and closing Modal.\r\n    setSelectedFiles({ files: files[0], open: false });\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setSelectedFiles({ open: true });\r\n  }\r\n\r\n  const onFinish = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const foodId =uuidv4();\r\n      const foodRef = firestore.collection('food');\r\n      const file = selectedFiles.files;\r\n      const fileRef = storage.child(file.name);\r\n      const uploadTaskSnapshot = await fileRef.put(file);\r\n      const downloadURL = await uploadTaskSnapshot.ref.getDownloadURL();\r\n      setFileUrl(downloadURL);\r\n      foodRef\r\n      .doc(foodId)\r\n      .set({\r\n        name,\r\n        foodId,\r\n        price,\r\n        fileUrl : downloadURL,\r\n        rating:3\r\n      })\r\n      alert('Create successed')\r\n    } catch (error) {\r\n      console.log(\"ERR ===\", error);\r\n      alert(\"Image uploading failed!\");\r\n    }\r\n  }\r\n  //ONE TIME GET FUNCTION\r\n  const getAlltype = () => {\r\n    const allTypeRef = firestore.collection('menu');\r\n    setLoading(true);\r\n    allTypeRef.get().then((item) => {\r\n      const items = item.docs.map((doc) => doc.data());\r\n      setAllType(items);\r\n      setLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    getAlltype();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          เพิ่มรายการอาหาร\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={onFinish}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"ชื่อ\"\r\n                name=\"name\"\r\n                onChange={handleName}\r\n              // autoComplete=\"type\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"price\"\r\n                label=\"ราคา\"\r\n                name=\"price\"\r\n                onChange={handlePrice}\r\n              // autoComplete=\"type\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth variant=\"outlined\" >\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">ประเภท</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={type}\r\n                  onChange={handleType}\r\n                  label=\"type\"\r\n                >\r\n                  {allType.map((type, idx) => (<MenuItem value={idx + 1}>{type.name}</MenuItem>))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            component=\"span\"\r\n            onClick={handleOpen}\r\n          >\r\n            ใส่รูปภาพ\r\n            </Button>\r\n          <DropzoneDialog\r\n            open={selectedFiles.open}\r\n            onSave={handleSave}\r\n            acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\r\n            showPreviews={true}\r\n            maxFileSize={5000000}\r\n            onClose={handleClose}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            เพิ่มข้อมูล\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\config\\firebase.js",[],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\auth\\Auth.js",[],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\PrivateRoutes\\PrivateRoutes.js",[],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\config\\roles.js",[],"E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\Profile\\Profile.js",["149","150","151"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport { firestore } from '../../../config/firebase';\r\n\r\nimport { AuthContext } from \"../../../auth/Auth\";\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    operate: {\r\n        border: 'none',\r\n        background: 'orange',\r\n        color:'red'\r\n    },\r\n    finished: {\r\n        border: 'none',\r\n        background: 'green',\r\n        color: 'white'\r\n    }\r\n});\r\n\r\n\r\nexport default function Profile() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const { currentUser, setCurrentUser } = useContext(AuthContext);\r\n    const [order, setOrder] = useState([]);\r\n\r\n    const imgEgg = (egg) => {\r\n        if (egg === '1') {\r\n            return 'ไข่ดาว'\r\n        } else if (egg === '2') {\r\n            return 'ไข่เจียว'\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n\r\n    //REALTIME GET FUNCTION\r\n    const getAllOrder = () => {\r\n        const orderRef = firestore.collection('foodOrder');\r\n        setLoading(true);\r\n        orderRef\r\n            .where('email', '==', currentUser.email)\r\n            .onSnapshot((querySnapshot) => {\r\n                const items = [];\r\n                querySnapshot.forEach((doc) => {\r\n                    items.push(doc.data());\r\n                });\r\n                setOrder(items);\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllOrder();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"80vh\",\r\n                }}\r\n            >\r\n                <h1>Loading ...</h1>\r\n            </div>\r\n        );\r\n    }\r\n    console.log(order);\r\n    // const {name, egg, foodSize,spicy,qty,status,option,orderId} = order[]\r\n    return (\r\n        <Container maxWidth=\"md\" style={{ marginTop: '10px' }}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n                รายการสั่งซื้อ\r\n                </Typography>\r\n            <TableContainer component={Paper}>\r\n\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>รายการ</TableCell>\r\n                            <TableCell align=\"center\"></TableCell>\r\n                            <TableCell align=\"center\">ไข่</TableCell>\r\n                            <TableCell align=\"center\">ขนาด</TableCell>\r\n                            <TableCell align=\"center\">ความเผ็ด</TableCell>\r\n                            <TableCell align=\"center\">เพิ่มเติม</TableCell>\r\n                            <TableCell align=\"center\">สถานะ</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {order.map((order) => (\r\n                            // getImage(order.foodId)\r\n                            <TableRow key={order.foodId}>\r\n                                <TableCell align=\"center\">\r\n                                    <img\r\n                                        src={order.fileUrl}\r\n                                        width={'100x'}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{order.name}</TableCell>\r\n                                <TableCell align=\"center\">{imgEgg(order.egg)}</TableCell>\r\n                                <TableCell align=\"center\">{order.foodSize === '2' ? 'พิเศษ' : 'ธรรมดา'}</TableCell>\r\n                                <TableCell align=\"center\">{order.spicy}</TableCell>\r\n                                <TableCell align=\"center\">{order.option}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                    <Typography variant=\"h6\"\r\n                                        className={order.status === 'เสร็จแล้ว' ? classes.finished : classes.operate}\r\n                                        gutterBottom\r\n                                    >\r\n                                        {order.status}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Container>\r\n    );\r\n}\r\n","E:\\CodeCamp\\Project\\personal-project\\food-ordering\\src\\containers\\page\\PageNotFound\\PageNotFound.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":41,"column":12,"nodeType":"158","messageId":"159","endLine":41,"endColumn":19},{"ruleId":"152","replacedBy":"160"},{"ruleId":"154","replacedBy":"161"},{"ruleId":"156","severity":1,"message":"162","line":10,"column":8,"nodeType":"158","messageId":"159","endLine":10,"endColumn":14},{"ruleId":"156","severity":1,"message":"163","line":12,"column":21,"nodeType":"158","messageId":"159","endLine":12,"endColumn":25},{"ruleId":"156","severity":1,"message":"164","line":54,"column":11,"nodeType":"158","messageId":"159","endLine":54,"endColumn":14},{"ruleId":"152","replacedBy":"165"},{"ruleId":"154","replacedBy":"166"},{"ruleId":"156","severity":1,"message":"167","line":17,"column":13,"nodeType":"158","messageId":"159","endLine":17,"endColumn":24},{"ruleId":"152","replacedBy":"168"},{"ruleId":"154","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":124,"column":8,"nodeType":"172","endLine":124,"endColumn":10,"suggestions":"173"},{"ruleId":"152","replacedBy":"174"},{"ruleId":"154","replacedBy":"175"},{"ruleId":"156","severity":1,"message":"176","line":8,"column":8,"nodeType":"158","messageId":"159","endLine":8,"endColumn":12},{"ruleId":"156","severity":1,"message":"177","line":9,"column":8,"nodeType":"158","messageId":"159","endLine":9,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":67,"column":33,"nodeType":"180","endLine":71,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":19,"column":10,"nodeType":"158","messageId":"159","endLine":19,"endColumn":17},{"ruleId":"156","severity":1,"message":"181","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"156","severity":1,"message":"182","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":19},{"ruleId":"156","severity":1,"message":"183","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":24},{"ruleId":"156","severity":1,"message":"184","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":16},{"ruleId":"156","severity":1,"message":"185","line":10,"column":8,"nodeType":"158","messageId":"159","endLine":10,"endColumn":11},{"ruleId":"156","severity":1,"message":"186","line":11,"column":8,"nodeType":"158","messageId":"159","endLine":11,"endColumn":24},{"ruleId":"156","severity":1,"message":"187","line":16,"column":10,"nodeType":"158","messageId":"159","endLine":16,"endColumn":19},{"ruleId":"152","replacedBy":"188"},{"ruleId":"154","replacedBy":"189"},{"ruleId":"156","severity":1,"message":"190","line":38,"column":10,"nodeType":"158","messageId":"159","endLine":38,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":42,"column":10,"nodeType":"158","messageId":"159","endLine":42,"endColumn":17},{"ruleId":"156","severity":1,"message":"191","line":36,"column":26,"nodeType":"158","messageId":"159","endLine":36,"endColumn":40},{"ruleId":"170","severity":1,"message":"192","line":67,"column":8,"nodeType":"172","endLine":67,"endColumn":10,"suggestions":"193"},{"ruleId":"178","severity":1,"message":"179","line":109,"column":37,"nodeType":"180","endLine":112,"endColumn":39},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar",["194"],["195"],"'Rating' is defined but never used.","'auth' is defined but never used.","'ref' is assigned a value but never used.",["194"],["195"],"'currentUser' is assigned a value but never used.",["194"],["195"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFoodById'. Either include it or remove the dependency array.","ArrayExpression",["196"],["194"],["195"],"'Link' is defined but never used.","'Paper' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","'CssBaseline' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'Copyright' is defined but never used.",["194"],["195"],"'fileUrl' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllOrder'. Either include it or remove the dependency array.",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [getFoodById]",{"range":"202","text":"203"},"Update the dependencies array to be: [getAllOrder]",{"range":"204","text":"205"},[3400,3402],"[getFoodById]",[2019,2021],"[getAllOrder]"]